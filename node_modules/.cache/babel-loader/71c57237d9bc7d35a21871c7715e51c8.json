{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TextInputTypes = () => React.createElement(React.Fragment, null, \"Text Input\");\n\nTextInputTypes.propTypes = {\n  // prefix: PropTypes.node,\n  // suffix: PropTypes.node,\n  isAutocomplete: PropTypes.bool,\n  defaultValue: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isFullWidth: PropTypes.bool,\n  isInvalid: PropTypes.bool,\n  isReadonly: PropTypes.bool,\n  // isSpellcheck: PropTypes.bool,\n  label: PropTypes.string,\n  maxLength: PropTypes.number,\n  minLength: PropTypes.number,\n  mode: PropTypes.oneOf(['light', 'grey']),\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  pattern: PropTypes.string,\n  placeholder: PropTypes.string,\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  value: PropTypes.string,\n  type: PropTypes.oneOf(['text', 'search'])\n};\nTextInputTypes.defaultProps = {\n  isAutocomplete: false,\n  isDisabled: false,\n  isFullWidth: false,\n  isInvalid: false,\n  isReadonly: false,\n  mode: 'light' // size: 'medium',\n\n};\nTextInputTypes.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"TextInputTypes\",\n  \"props\": {\n    \"isAutocomplete\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isDisabled\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isFullWidth\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isInvalid\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isReadonly\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"mode\": {\n      \"defaultValue\": {\n        \"value\": \"'light'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'light'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'grey'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"defaultValue\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"id\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"maxLength\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"minLength\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onBlur\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onFocus\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"pattern\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"placeholder\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"size\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'small'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'medium'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'large'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"type\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'text'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'search'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default TextInputTypes;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/TextInput/TextInput.types.js\"] = {\n    name: \"TextInputTypes\",\n    docgenInfo: TextInputTypes.__docgenInfo,\n    path: \"src/components/TextInput/TextInput.types.js\"\n  };\n}","map":{"version":3,"sources":["/Users/successive22/sunil/gitprojects/stack-component-library/src/components/TextInput/TextInput.types.js"],"names":["React","PropTypes","TextInputTypes","propTypes","isAutocomplete","bool","defaultValue","string","id","isDisabled","isFullWidth","isInvalid","isReadonly","label","maxLength","number","minLength","mode","oneOf","onBlur","func","onChange","onFocus","pattern","placeholder","size","value","type","defaultProps"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,cAAc,GAAG,MAAM,uDAA7B;;AAEAA,cAAc,CAACC,SAAf,GAA2B;AACzB;AACA;AACAC,EAAAA,cAAc,EAAEH,SAAS,CAACI,IAHD;AAIzBC,EAAAA,YAAY,EAAEL,SAAS,CAACM,MAJC;AAKzBC,EAAAA,EAAE,EAAEP,SAAS,CAACM,MALW;AAMzBE,EAAAA,UAAU,EAAER,SAAS,CAACI,IANG;AAOzBK,EAAAA,WAAW,EAAET,SAAS,CAACI,IAPE;AAQzBM,EAAAA,SAAS,EAAEV,SAAS,CAACI,IARI;AASzBO,EAAAA,UAAU,EAAEX,SAAS,CAACI,IATG;AAUzB;AACAQ,EAAAA,KAAK,EAAEZ,SAAS,CAACM,MAXQ;AAYzBO,EAAAA,SAAS,EAAEb,SAAS,CAACc,MAZI;AAazBC,EAAAA,SAAS,EAAEf,SAAS,CAACc,MAbI;AAczBE,EAAAA,IAAI,EAAEhB,SAAS,CAACiB,KAAV,CAAgB,CAAC,OAAD,EAAU,MAAV,CAAhB,CAdmB;AAezBC,EAAAA,MAAM,EAAElB,SAAS,CAACmB,IAfO;AAgBzBC,EAAAA,QAAQ,EAAEpB,SAAS,CAACmB,IAhBK;AAiBzBE,EAAAA,OAAO,EAAErB,SAAS,CAACmB,IAjBM;AAkBzBG,EAAAA,OAAO,EAAEtB,SAAS,CAACM,MAlBM;AAmBzBiB,EAAAA,WAAW,EAAEvB,SAAS,CAACM,MAnBE;AAoBzBkB,EAAAA,IAAI,EAAExB,SAAS,CAACiB,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAAhB,CApBmB;AAqBzBQ,EAAAA,KAAK,EAAEzB,SAAS,CAACM,MArBQ;AAsBzBoB,EAAAA,IAAI,EAAE1B,SAAS,CAACiB,KAAV,CAAgB,CAAC,MAAD,EAAS,QAAT,CAAhB;AAtBmB,CAA3B;AAyBAhB,cAAc,CAAC0B,YAAf,GAA8B;AAC5BxB,EAAAA,cAAc,EAAE,KADY;AAE5BK,EAAAA,UAAU,EAAE,KAFgB;AAG5BC,EAAAA,WAAW,EAAE,KAHe;AAI5BC,EAAAA,SAAS,EAAE,KAJiB;AAK5BC,EAAAA,UAAU,EAAE,KALgB;AAM5BK,EAAAA,IAAI,EAAE,OANsB,CAO5B;;AAP4B,CAA9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,eAAef,cAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TextInputTypes = () => <>Text Input</>;\n\nTextInputTypes.propTypes = {\n  // prefix: PropTypes.node,\n  // suffix: PropTypes.node,\n  isAutocomplete: PropTypes.bool,\n  defaultValue: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isFullWidth: PropTypes.bool,\n  isInvalid: PropTypes.bool,\n  isReadonly: PropTypes.bool,\n  // isSpellcheck: PropTypes.bool,\n  label: PropTypes.string,\n  maxLength: PropTypes.number,\n  minLength: PropTypes.number,\n  mode: PropTypes.oneOf(['light', 'grey']),\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  pattern: PropTypes.string,\n  placeholder: PropTypes.string,\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  value: PropTypes.string,\n  type: PropTypes.oneOf(['text', 'search']),\n};\n\nTextInputTypes.defaultProps = {\n  isAutocomplete: false,\n  isDisabled: false,\n  isFullWidth: false,\n  isInvalid: false,\n  isReadonly: false,\n  mode: 'light',\n  // size: 'medium',\n};\n\nexport default TextInputTypes;\n"]},"metadata":{},"sourceType":"module"}